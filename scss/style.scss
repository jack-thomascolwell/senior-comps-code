@use "sass:list";
@use "util/variables" as v;
@use 'dropdown';
@use 'button';

:root {
  --color-signal: #fab700;

  --color-accent: var(--color-signal);

  line-height: 1.4;

  font-family: sans-serif;
  font-size: calc(.6rem + .4vw);
  color: v.$color-text;
  background: v.$color-bg;
  font-weight: 300;
}

h1, h2, h3 {
  font-weight: 900;
}

.input {
  user-select: none;
  position: relative;
  padding-top: 12px;

  .focus-border {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 0;
    height: 2px;
    background-color: #4caf50;
    transition: 0.4s;
  }

  label {
    position: absolute;
    left: 0;
    width: 100%;
    top: 12px;
    color: #aaa;
    transition: 0.3s;
    z-index: -1;
    letter-spacing: 0.5px;
  }

  input {
    position: relative;
    font: 15px/24px monospace;
    color: #333;
    width: 100%;
    box-sizing: border-box;

    border: none;
    padding: 2px 0 0 0;
    border-bottom: 1px solid #ccc;
    background-color: transparent;

    &:not(:placeholder-shown), &:focus {
      outline: none;

      &~ .focus-border {
      width: 100%;
      transition: 0.4s;
      }
      &~label {
        top: 0;
        font-size: 12px;
        color:#4caf50;
        transition: 0.3s;
      }
    }

    &:not(:placeholder-shown):not(:focus) {
      &~ .focus-border {
        width: 0;
        transition: 0.4s;
      }
      &~label {
        color:#333;
        transition: 0.3s;
      }
    }
  }
}

body {
  margin: 0;
}

#calculator {
  display: grid;
  box-sizing: border-box;
  padding: 15px;
  grid-template-rows: minmax(0,1fr) minmax(0,auto);
  grid-column-gap: 15px;
  grid-template-columns: minmax(0,55fr) minmax(0,45fr);
  grid-template-areas: "display visualizer" "display button";
  width: 100vw;
  height: 100vh;

  #compute {
    content: " compute ";
    grid-area: button;
    margin-left: auto;
    margin-right: auto;
  }

  &.output {
    #ligands {
      display: none;
    }

    #output {
      display: block;
    }
  }

  #visualizer {
    grid-area: visualizer;
    box-sizing: border-box;
    padding: 10px;
  }

  #ligands, #output {
    padding: 10px;
    box-shadow: 0 14px 14px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22);
    grid-area: display;
    height: 100%;
    width: 100%;
    box-sizing: border-box;
    overflow-y: scroll;
    overflow-x: hidden;

    .heading {
      margin: 0;
      margin-bottom: 5px;
      font: 32px/40px v.$font-sans-serif;
    }

    .description {
      margin: 0;
      font: list.slash(v.$font-size, v.$line-height) v.$font-sans-serif;
      &:last-of-type {
        margin-bottom: v.$line-height;
      }
    }

    .controls {
      display: flex;
      flex-direction: row;
      justify-content: flex-start;
      align-items: center;

      > * {
        margin: 0px v.$padding;
        &:first-child {
          margin-left: 0px;
        }

        &:last-child {
          margin-right: 0px;
        }
      }
    }
  }

  #ligands {
    &:not(.start) .ligand .start {
      display: none;
    }

    &.start .ligand .end{
      display: none;
    }

    .ligand {
      .start, .end {
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        flex-wrap: nowrap;
        width: 100%;
      }

      margin-top: 15px;
      width: 100%;

      .reset {
        font-size: 15px;
        line-height: 15px;
        margin-right: 5px;
        cursor: pointer;
        &:hover {
          color: #4caf50;
        }
      }

      .delete {
        font-size: 15px;
        line-height: 15px;
        margin-right: 5px;
        cursor: pointer;
        &:hover {
          color: #4caf50;
        }
      }

      .energies {
        display: flex;
        flex-direction: row;
        justify-content: space-between;
        align-items: center;
        margin-left: 2em;
        width: calc(2*6em + 2em);
        margin-right: auto;

        input {
          width: 6em;
        }
      }

      .position {
        input {
          width: 3em;
        }
      }
    }
  }

  #output {
    display: none;

    #plot {
      display: grid;
      grid-template-rows: auto 1fr auto;
      grid-template-columns: 1fr;
      grid-template-areas: 'controls' 'plot' 'matrix';
      grid-row-gap: 15px;

      .controls {
        grid-area: controls;
      }

      .matrices {
        grid-area: matrix;
        display: flex;
        flex-direction: row;
        justify-content: flex-start;
        align-items: center;
        flex-wrap: nowrap;

        .matrix:not(.tooltip) {
          order: 1;
        }

        .tooltip {
          order: 3;
          li {
            color: var(--color);
          }
        }

        .arrow {
          order: 2;
          font-size: 24px;
          line-height: 24px;
          text-align: center;
          margin: 0 1ch;
        }
      }

      .wrapper {
        grid-area: plot;
        cursor: pointer;
      }
    }
  }
}

.orderedPair {
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  justify-content: flex-start;
  align-items: stretch;

  .input {
    margin: 0 0.25em;
  }

  .separator {
    position: relative;
    width: 2ex;
    font-size: 15px;

    &::after {
      content: ",";
      font: 15px/15px monospace;
      position: absolute;
      bottom: 0px;
      left: 0px;
    }
  }

  .parenthesis {
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    flex-wrap: nowrap;

    &:first-child::after {
      content: '(';
    }

    &::after {
      margin-top: -1.5px;
      content: ')';
      font: 15px/15px monospace;
      transform: scaleY(calc(1.25 * (24px + 2px + 12px + 1px) / 15px));
    }
  }
}

.monospace {
  font-family: v.$font-monospace;
}

.hidden {
  display: none !important;
}

.matrix {
  width: fit-content;
  height: fit-content;
  min-height: calc((v.$padding * 2 + 15px) * var(--rows));
  min-width: calc(6ch * var(--cols));
  margin: 0;
  padding: 1ex;
  box-sizing:content-box;
  display: grid;
  grid-auto-flow: row;
  grid-template-rows: repeat(var(--rows), 1fr);
  grid-template-columns: repeat(var(--cols), 6ch);
  list-style: none;
  font: list.slash(v.$font-size, v.$font-size) v.$font-monospace;
  position: relative;

  li {
    padding-top: v.$padding;
    padding-bottom: v.$padding;
    padding-left: 0.5ch;
    padding-right: 0.5ch;
    width: 100%;
    box-sizing: border-box;
  }

  &::before, &::after {
    content: " ";
    width: calc(1ex - 2px);
    height: calc(100% - 4px);
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    border: 2px solid v.$color-text;
  }

  &::before {
    left: 1px;
    border-right: none;
  }

  &::after {
    right: 1px;
    border-left: none;
  }
}

.visualizer {
  width: 100%;
  height: 100%;
  max-height: 100%;
  max-width: 100%;
  position: relative;
  display: grid;
  grid-template-columns: minmax(0,1fr);
  grid-template-rows: minmax(0,auto) minmax(0,1fr);
  grid-template-areas: 'controls' 'canvas';

  .controls {
    grid-area: controls;
    display: flex;
    flex-direction: row;
    justify-content: space-around;
    align-items: center;
    align-content: flex-start;
    flex-wrap: wrap;
  }

  .wrapper {
    grid-area: canvas;
    position: relative;
  }

  .axesLabel {
    position: absolute;
    bottom: 0;
    right: 0;
    padding: v.$padding;
    user-select: none;
    font: list.slash(v.$font-size, v.$line-height) v.$font-monospace;
    display: flex;
  }
}
